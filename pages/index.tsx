import {
  Box,
  Button,
  Card,
  CardBody,
  CardFooter,
  Heading,
  SimpleGrid,
  Stack,
  Text,
  useDisclosure,
} from "@chakra-ui/react";
import axios from "axios";
import Head from "next/head";
import { useQuery } from "react-query";
import { Posts } from "../types/posts";
import { useState } from "react";
import AddForm from "../components/AddForm";
import ModalDetails from "../components/ModalDetails";
import ModalEdit from "../components/ModalEdit";

export default function Home() {
  const [posts, setPosts] = useState<Posts[]>([]);
  const [selectedPost, setSelectedPost] = useState<Posts | undefined>(
    undefined
  );
  const {
    isOpen: isDetailsOpen,
    onOpen: onDetailOpen,
    onClose: onDetailClose,
  } = useDisclosure();
  const {
    isOpen: isEditOpen,
    onOpen: onEditOpen,
    onClose: onEditClose,
  } = useDisclosure();

  async function fetchPosts() {
    const { data } = await axios("https://jsonplaceholder.typicode.com/posts");
    setPosts(data);
    return data;
  }
  const { isLoading } = useQuery({
    queryKey: ["getPost"],
    queryFn: fetchPosts,
  });

  function handleShowDetails(id: number) {
    onDetailOpen();
    const findPost: undefined | Posts = posts.find((post) => post.id == id);
    setSelectedPost(findPost);
  }

  function handleShowEdit(id: number) {
    onEditOpen();
  }

  function handleDelete(id: number) {
    const deletePost = posts.filter((post) => post.id !== id);
    setPosts(deletePost);
  }

  return (
    <>
      <Head>
        <title>IMP Frontend</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box>
        <AddForm posts={posts} setPosts={setPosts} />

        <Stack>
          <Heading as="h1" size="md" textAlign="center">
            Posts Data
          </Heading>
          <SimpleGrid
            spacing={4}
            templateColumns="repeat(auto-fill, minmax(260px, 1fr))"
          >
            {!isLoading &&
              posts.map((post: Posts) => (
                <Card key={post.id}>
                  <CardBody>
                    <Text>{post.title}</Text>
                  </CardBody>
                  <CardFooter gap={2}>
                    <Button
                      colorScheme="telegram"
                      size="sm"
                      onClick={() => handleShowDetails(post.id)}
                    >
                      Details
                    </Button>
                    <Button
                      colorScheme="facebook"
                      size="sm"
                      variant="outline"
                      onClick={() => handleShowEdit(post.id)}
                    >
                      Edit
                    </Button>
                    <Button
                      colorScheme="orange"
                      size="sm"
                      variant="outline"
                      onClick={() => handleDelete(post.id)}
                    >
                      Delete
                    </Button>
                  </CardFooter>
                </Card>
              ))}
          </SimpleGrid>
        </Stack>
      </Box>

      <ModalDetails
        isOpen={isDetailsOpen}
        onClose={onDetailClose}
        selectedPost={selectedPost}
      />

      <ModalEdit isOpen={isEditOpen} onClose={onEditClose} />
    </>
  );
}
